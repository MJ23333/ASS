{
  "version": 3,
  "sources": ["../../svelte-motion/src/animation/animate.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/crossfader.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/stack.js", "../../svelte-motion/src/components/AnimateSharedLayout/utils/rotate.js", "../../svelte-motion/src/components/AnimateSharedLayout/AnimateSharedLayout.svelte"],
  "sourcesContent": ["/** \nbased on framer-motion@4.0.3,\nCopyright (c) 2018 Framer B.V.\n*/\n\nimport { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { startAnimation } from './utils/transitions.js';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n    };\n}\n\nexport { animate };\n", "/** \nbased on framer-motion@4.0.3,\nCopyright (c) 2018 Framer B.V.\n*/\nimport {fixed} from '../../../utils/fix-process-env';\nimport { __assign } from 'tslib';\nimport sync, { getFrameData } from 'framesync';\nimport { mix, progress, linear, mixColor, circOut } from 'popmotion';\nimport { animate } from '../../../animation/animate.js';\nimport { getValueTransition } from '../../../animation/utils/transitions.js';\nimport { motionValue } from '../../../value/index.js';\n\nfunction createCrossfader() {\n    /**\n     * The current state of the crossfade as a value between 0 and 1\n     */\n    var progress = motionValue(1);\n    var options = {\n        lead: undefined,\n        follow: undefined,\n        crossfadeOpacity: false,\n        preserveFollowOpacity: false,\n    };\n    var prevOptions = __assign({}, options);\n    var leadState = {};\n    var followState = {};\n    /**\n     *\n     */\n    var isActive = false;\n    /**\n     *\n     */\n    var finalCrossfadeFrame = null;\n    /**\n     * Framestamp of the last frame we updated values at.\n     */\n    var prevUpdate = 0;\n    function startCrossfadeAnimation(target, transition) {\n        var lead = options.lead, follow = options.follow;\n        isActive = true;\n        finalCrossfadeFrame = null;\n        var hasUpdated = false;\n        var onUpdate = function () {\n            hasUpdated = true;\n            lead && lead.scheduleRender();\n            follow && follow.scheduleRender();\n        };\n        var onComplete = function () {\n            isActive = false;\n            /**\n             * If the crossfade animation is no longer active, flag a frame\n             * that we're still allowed to crossfade\n             */\n            finalCrossfadeFrame = getFrameData().timestamp;\n        };\n        transition = transition && getValueTransition(transition, \"crossfade\");\n        return animate(progress, target, __assign(__assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\n                if (!hasUpdated) {\n                    progress.set(target);\n                    /**\n                     * If we never ran an update, for instance if this was an instant transition, fire a\n                     * simulated final frame to ensure the crossfade gets applied correctly.\n                     */\n                    sync.read(onComplete);\n                }\n                else {\n                    onComplete();\n                }\n                onUpdate();\n            } }));\n    }\n    function updateCrossfade() {\n        var _a, _b;\n        /**\n         * We only want to compute the crossfade once per frame, so we\n         * compare the previous update framestamp with the current frame\n         * and early return if they're the same.\n         */\n        var timestamp = getFrameData().timestamp;\n        var lead = options.lead, follow = options.follow;\n        if (timestamp === prevUpdate || !lead)\n            return;\n        prevUpdate = timestamp;\n        /**\n         * Merge each component's latest values into our crossfaded state\n         * before crossfading.\n         */\n        var latestLeadValues = lead.getLatestValues();\n        Object.assign(leadState, latestLeadValues);\n        var latestFollowValues = follow\n            ? follow.getLatestValues()\n            : options.prevValues;\n        Object.assign(followState, latestFollowValues);\n        var p = progress.get();\n        /**\n         * Crossfade the opacity between the two components. This will result\n         * in a different opacity for each component.\n         */\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n        if (options.crossfadeOpacity && follow) {\n            leadState.opacity = mix(\n            /**\n             * If the follow child has been completely hidden we animate\n             * this opacity from its previous opacity, but otherwise from completely transparent.\n             */\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n            followState.opacity = options.preserveFollowOpacity\n                ? followTargetOpacity\n                : mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n        }\n        else if (!follow) {\n            leadState.opacity = mix(followTargetOpacity, leadTargetOpacity, p);\n        }\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n    }\n    return {\n        isActive: function () {\n            return leadState &&\n                (isActive || getFrameData().timestamp === finalCrossfadeFrame);\n        },\n        fromLead: function (transition) {\n            return startCrossfadeAnimation(0, transition);\n        },\n        toLead: function (transition) {\n            var initialProgress = 0;\n            if (!options.prevValues && !options.follow) {\n                /**\n                 * If we're not coming from anywhere, start at the end of the animation.\n                 */\n                initialProgress = 1;\n            }\n            else if (prevOptions.lead === options.follow &&\n                prevOptions.follow === options.lead) {\n                /**\n                 * If we're swapping follow/lead we can reverse the progress\n                 */\n                initialProgress = 1 - progress.get();\n            }\n            progress.set(initialProgress);\n            return startCrossfadeAnimation(1, transition);\n        },\n        reset: function () { return progress.set(1); },\n        stop: function () { return progress.stop(); },\n        getCrossfadeState: function (element) {\n            updateCrossfade();\n            if (element === options.lead) {\n                return leadState;\n            }\n            else if (element === options.follow) {\n                return followState;\n            }\n        },\n        setOptions: function (newOptions) {\n            prevOptions = options;\n            options = newOptions;\n            leadState = {};\n            followState = {};\n        },\n        getLatestValues: function () {\n            return leadState;\n        },\n    };\n}\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\n        var followRadius = getRadius(latestFollowValues, borderLabel);\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        /**\n         * Currently we're only crossfading between numerical border radius.\n         * It would be possible to crossfade between percentages for a little\n         * extra bundle size.\n         */\n        if (typeof followRadius === \"number\" &&\n            typeof leadRadius === \"number\") {\n            var radius = Math.max(mix(followRadius, leadRadius, p), 0);\n            leadState[borderLabel] = followState[borderLabel] = radius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\n        var rotate = mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n        leadState.rotate = followState.rotate = rotate;\n    }\n    /**\n     * We only want to mix the background color if there's a follow element\n     * that we're not crossfading opacity between. For instance with switch\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\n     * element being animated but also cuts down on the number of paints triggered\n     * for elements where opacity is doing that work for us.\n     */\n    if (!hasFollowElement &&\n        latestLeadValues.backgroundColor &&\n        latestFollowValues.backgroundColor) {\n        /**\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n         * We could probably create a mixer that runs at the start of the animation but\n         * the idea behind the crossfader is that it runs dynamically between two potentially\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\n         */\n        leadState.backgroundColor = followState.backgroundColor = mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nexport { createCrossfader };\n", "/** \nbased on framer-motion@4.0.3,\nCopyright (c) 2018 Framer B.V.\n*/\n\nimport { __assign } from 'tslib';\nimport { Presence } from '../types.js';\nimport { elementDragControls } from '../../../gestures/drag/VisualElementDragControls.js';\nimport { createCrossfader } from './crossfader.js';\n\nfunction layoutStack() {\n    var stack = new Set();\n    var state = { leadIsExiting: false };\n    var prevState = __assign({}, state);\n    var prevValues;\n    var prevViewportBox;\n    var prevDragCursor;\n    var crossfader = createCrossfader();\n    var needsCrossfadeAnimation = false;\n    function getFollowViewportBox() {\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n    }\n    function getFollowLayout() {\n        var _a;\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n    }\n    return {\n        add: function (element) {\n            element.setCrossfader(crossfader);\n            stack.add(element);\n            /**\n             * Hydrate new element with previous drag position if we have one\n             */\n            if (prevDragCursor)\n                element.prevDragCursor = prevDragCursor;\n            if (!state.lead)\n                state.lead = element;\n        },\n        remove: function (element) {\n            stack.delete(element);\n        },\n        getLead: function () { return state.lead; },\n        updateSnapshot: function () {\n            if (!state.lead)\n                return;\n            prevValues = crossfader.isActive()\n                ? crossfader.getLatestValues()\n                : state.lead.getLatestValues();\n            prevViewportBox = state.lead.prevViewportBox;\n            var dragControls = elementDragControls.get(state.lead);\n            if (dragControls && dragControls.isDragging) {\n                prevDragCursor = dragControls.cursorProgress;\n            }\n        },\n        clearSnapshot: function () {\n            prevDragCursor = prevViewportBox = undefined;\n        },\n        updateLeadAndFollow: function () {\n            var _a;\n            prevState = __assign({}, state);\n            var lead;\n            var follow;\n            var order = Array.from(stack);\n            for (var i = order.length; i--; i >= 0) {\n                var element = order[i];\n                if (lead)\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\n                lead !== null && lead !== void 0 ? lead : (lead = element);\n                if (lead && follow)\n                    break;\n            }\n            state.lead = lead;\n            state.follow = follow;\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n            crossfader.setOptions({\n                lead: lead,\n                follow: follow,\n                prevValues: prevValues,\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\n            });\n            if (\n            // Don't crossfade if we've just animated back from lead and switched the\n            // old follow to the new lead.\n            state.lead !== prevState.follow &&\n                (prevState.lead !== state.lead ||\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\n                needsCrossfadeAnimation = true;\n            }\n        },\n        animate: function (child, shouldCrossfade) {\n            var _a;\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\n            if (child === state.lead) {\n                if (shouldCrossfade) {\n                    /**\n                     * Point a lead to itself in case it was previously pointing\n                     * to a different visual element\n                     */\n                    child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(true);\n                }\n                var config = {};\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n                if (prevParent) {\n                    /**\n                     * We'll use this to determine if the element or its layoutId has been reparented.\n                     */\n                    config.prevParent = prevParent;\n                }\n                if (child.presence === Presence.Entering) {\n                    config.originBox = getFollowViewportBox();\n                }\n                else if (child.presence === Presence.Exiting) {\n                    config.targetBox = getFollowLayout();\n                }\n                if (needsCrossfadeAnimation) {\n                    needsCrossfadeAnimation = false;\n                    var transition = child.getDefaultTransition();\n                    child.presence === Presence.Entering\n                        ? crossfader.toLead(transition)\n                        : crossfader.fromLead(transition);\n                }\n                child.notifyLayoutReady(config);\n            }\n            else {\n                if (shouldCrossfade) {\n                    state.lead && child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(false);\n                }\n            }\n        },\n    };\n}\n\nexport { layoutStack };\n", "/** \nbased on framer-motion@4.0.3,\nCopyright (c) 2018 Framer B.V.\n*/\n\nimport { transformAxes } from '../../../render/html/utils/transform.js';\n\nfunction resetRotate(child) {\n    // If there's no detected rotation values, we can early return without a forced render.\n    var hasRotate = false;\n    // Keep a record of all the values we've reset\n    var resetValues = {};\n    // Check the rotate value of all axes and reset to 0\n    for (var i = 0; i < transformAxes.length; i++) {\n        var axis = transformAxes[i];\n        var key = \"rotate\" + axis;\n        // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\n            continue;\n        hasRotate = true;\n        // Record the rotation and then temporarily set it to 0\n        resetValues[key] = child.getStaticValue(key);\n        child.setStaticValue(key, 0);\n    }\n    // If there's no rotation values, we don't need to do any more.\n    if (!hasRotate)\n        return;\n    // Force a render of this element to apply the transform with all rotations\n    // set to 0.\n    child.syncRender();\n    // Put back all the values we reset\n    for (var key in resetValues) {\n        child.setStaticValue(key, resetValues[key]);\n    }\n    // Schedule a render for the next frame. This ensures we won't visually\n    // see the element with the reset rotate value applied.\n    child.scheduleRender();\n}\n\nexport { resetRotate };\n", null],
  "mappings": "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",
  "names": ["progress"]
}
